version: '3.9'
services:
  user-service:
    container_name: user-service
    build: .
    ports:
      - "8080:8080"
    depends_on:
      - db
      - kafka
    environment:
      - MONGO_URL=mongodb://user:password@db:27017/
      - KAFKA_SERVER=kafka:9092
    networks:
      - kafka-net
      - db-net
  db:
    image: mongo
    container_name: test-mongo
    restart: always
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=user
      - MONGO_INITDB_ROOT_PASSWORD=password
    networks:
      - db-net
  # db-client as UI to see the db state in browser on localhost:8081
  db-client:
    image: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_BASICAUTH_USERNAME=user
      - ME_CONFIG_BASICAUTH_PASSWORD=password
      - ME_CONFIG_MONGODB_URL=mongodb://user:password@db:27017/
    depends_on:
      - db
    networks:
      - db-net
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - kafka-net
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "UserEvents:1:1"
    networks:
      - kafka-net
networks:
  kafka-net:
    driver: bridge
  db-net:
    driver: bridge
